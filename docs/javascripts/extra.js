// –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
document.addEventListener('DOMContentLoaded', function() {
    console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...');

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ Material –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    const standardButtons = document.querySelectorAll('.md-clipboard');
    standardButtons.forEach(btn => btn.remove());

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞
    const codeBlocks = document.querySelectorAll('div.highlight');

    codeBlocks.forEach(function(block, index) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å –∫–æ–¥
        const codeElement = block.querySelector('pre code') || block.querySelector('pre');
        if (!codeElement) return;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞
        if (block.querySelector('.custom-copy-button')) return;

        // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –∫–Ω–æ–ø–∫—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        const copyButton = document.createElement('button');
        copyButton.className = 'custom-copy-button';
        copyButton.setAttribute('data-tooltip', 'Copy code');
        copyButton.setAttribute('aria-label', 'Copy code to clipboard');
        copyButton.setAttribute('data-index', index);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        copyButton.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();

            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–¥–∞ (—É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã)
            let codeText = codeElement.textContent || codeElement.innerText;

            // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
            codeText = codeText.trim();

            // –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
            copyToClipboard(codeText, copyButton);
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫ –±–ª–æ–∫—É –∫–æ–¥–∞
        block.appendChild(copyButton);

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            copyButton.classList.add('show');
        }, index * 50);
    });

    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${codeBlocks.length} –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è`);
});

// –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text, button) {
    // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ Clipboard API
    if (navigator.clipboard && navigator.clipboard.writeText) {
        navigator.clipboard.writeText(text).then(function() {
            showCopySuccess(button);
        }).catch(function(err) {
            console.warn('Clipboard API failed, using fallback:', err);
            fallbackCopyTextToClipboard(text, button);
        });
    } else {
        // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
        fallbackCopyTextToClipboard(text, button);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
function showCopySuccess(button) {
    // –ú–µ–Ω—è–µ–º –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∫–Ω–æ–ø–∫–∏
    button.classList.add('copied');
    button.setAttribute('data-tooltip', 'Copied!');

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –≤–∏–¥ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(function() {
        button.classList.remove('copied');
        button.setAttribute('data-tooltip', 'Copy code');
    }, 2000);

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∏–º–∞—Ü–∏—é
    button.style.transform = 'scale(1.1)';
    setTimeout(() => {
        button.style.transform = '';
    }, 150);
}

// Fallback –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö
function fallbackCopyTextToClipboard(text, button) {
    const textArea = document.createElement("textarea");
    textArea.value = text;

    // –î–µ–ª–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–≤–∏–¥–∏–º—ã–º –Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º
    textArea.style.position = "fixed";
    textArea.style.top = "0";
    textArea.style.left = "0";
    textArea.style.width = "2em";
    textArea.style.height = "2em";
    textArea.style.padding = "0";
    textArea.style.border = "none";
    textArea.style.outline = "none";
    textArea.style.boxShadow = "none";
    textArea.style.background = "transparent";
    textArea.style.opacity = "0";

    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();

    try {
        const successful = document.execCommand('copy');
        if (successful) {
            showCopySuccess(button);
            console.log('‚úÖ Fallback copy successful');
        } else {
            console.error('‚ùå Fallback copy failed');
            showCopyError(button);
        }
    } catch (err) {
        console.error('‚ùå Fallback copy error:', err);
        showCopyError(button);
    }

    document.body.removeChild(textArea);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
function showCopyError(button) {
    button.style.background = 'rgba(239, 68, 68, 0.9)';
    button.setAttribute('data-tooltip', 'Copy failed');

    setTimeout(function() {
        button.style.background = '';
        button.setAttribute('data-tooltip', 'Copy code');
    }, 2000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
document.addEventListener('keydown', function(e) {
    // Ctrl+Shift+C –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞ –∫–æ–¥–∞
    if (e.ctrlKey && e.shiftKey && e.key === 'C') {
        const activeElement = document.activeElement;
        const codeBlock = activeElement.closest('.highlight');
        if (codeBlock) {
            const copyButton = codeBlock.querySelector('.custom-copy-button');
            if (copyButton) {
                copyButton.click();
                e.preventDefault();
            }
        }
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è focus-—Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫ (–¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏)
const focusStyles = `
.custom-copy-button:focus {
    outline: 2px solid #2196f3;
    outline-offset: 2px;
    opacity: 1 !important;
}

.custom-copy-button:focus-visible {
    outline: 2px solid #2196f3;
    outline-offset: 2px;
}
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
const styleSheet = document.createElement('style');
styleSheet.textContent = focusStyles;
document.head.appendChild(styleSheet);